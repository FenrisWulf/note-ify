package postIt.note.view;

import java.awt.Color;
import java.awt.Point;
import java.util.Observable;
import java.util.Observer;

import javax.swing.JTextPane;

import postIt.note.NoteInfo;

public class PostItNote extends JTextPane implements Observer {

	/**
	 *  
	 */
	private static final long serialVersionUID = 3159494906460844606L;
	private Color color;
	private Point coordinate;
	private int width;
	private int height;

	public PostItNote(NoteInfo noteInfo) {
		setBackground(Color.YELLOW);

		/*
		 * Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		 * int screenWidth = (int) screenSize.getWidth(); int screenHeight =
		 * (int) screenSize.getHeight(); coordinate = new Point((int)
		 * (Math.random() * screenWidth), (int) (Math.random() * screenHeight));
		 */

		width = noteInfo.getWidth();
		height = noteInfo.getHeight();
		coordinate = new Point(noteInfo.getX(), noteInfo.getY());
		setText(noteInfo.getText());
		setBounds(coordinate.x - width / 2, coordinate.y - height / 2, width,
				height);
	}

	@Override
	public void update(Observable arg0, Object arg1) {
		// paintComponent((Graphics) arg1);
	}

	public void move(int deltaX, int deltaY) {
		coordinate.setLocation(coordinate.x + deltaX, coordinate.y + deltaY);
		setBounds(coordinate.x - width / 2, coordinate.y - height / 2, width,
				height);
	}

	public boolean isInside(int x, int y) {
		if (coordinate.x - width / 2 <= x && coordinate.x + width / 2 >= x
				&& coordinate.y - height / 2 <= y
				&& coordinate.y + height / 2 >= y) {
			return true;
		}
		return false;
	}
}
