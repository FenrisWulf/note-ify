package postIt.model;

import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONObject;

import postIt.note.NoteInfo;

public class PostItModel {
	IPostItModelToControllerAdapter adapter;
	private Dispatcher dispatcher;

	public PostItModel(IPostItModelToControllerAdapter adapter) {
		this.adapter = adapter;
		this.dispatcher = new Dispatcher();
		start();
	}

	private void start() {
	}

	public ArrayList<NoteInfo> loadNotes() {
		String filename = "data.txt";
		BufferedReader br = null;
		StringBuilder input = new StringBuilder();
		String st = null;
		File f = new File(filename);
		System.out.println(f.getAbsolutePath());

		try {
			br = new BufferedReader(new FileReader(filename));
			try {
				st = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}

		} catch (FileNotFoundException e) {
			System.err.println("Filenot found");
			st = null;
		}

		while (st != null) {
			input.append(st);
			try {
				st = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		JSONObject parsedObject = new JSONObject(input.toString());
		JSONArray noteJSONArray = parsedObject.getJSONArray("notes");
		ArrayList<NoteInfo> loadedNotes = new ArrayList<NoteInfo>();
		for (int i = 0; i < noteJSONArray.length(); i++) {
			JSONObject noteJSON = noteJSONArray.getJSONObject(i);
			loadedNotes.add(new NoteInfo(noteJSON.getString("text"), Integer
					.parseInt(noteJSON.getString("x")), Integer
					.parseInt(noteJSON.getString("y")), Integer
					.parseInt(noteJSON.getString("width")), Integer
					.parseInt(noteJSON.getString("height")), Integer
					.parseInt(noteJSON.getString("color"))));
		}

		return loadedNotes;

	}

	public void createPostIt() {
		NoteInfo newPostIt = new NoteInfo("abc", 300, 300, 300, 300, 300);
		adapter.addPostIt(newPostIt);

	}

	public void update(Graphics g) {
		dispatcher.notifyAll(g);
	}
}
